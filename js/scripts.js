let t={reviews:[{id:0,productName:"Дрель ударная BOSCH PSB 550 RЕ, БЗП Арт.0603130020",productPhoto:"./img/productImgs/drill.png",reviewText:"Значит купил я данную модель, поработал неделю, отказал один аккумулятор, заряд держиттак себе, НООООООООО МАГАЗИН АДЕКВАТНЫЙ, ОБМЕНЯЛИ НА НОВЫЙ, ПРИЧЁМ ПРИВЕЗЛИ ДОМОЙ.С ТАКИМ ПРОДАВЦОМ ПРИЯТНО ИМЕТЬ ДЕЛО!!!",impression:0,conformity:0,reliability:0,date:"1 августа, 2018",postStatus:"posted",photos:[],modifiedStatus:!0,modifiedDate:" 19 августа, 2018",modifiedText:"год прошёл, работает как пушка!",modifiedPhotos:["./img/messageImgs/workingDrill.png","./img/messageImgs/drill.png"],modifiedPostStatus:"moderating"},{id:0,productName:"Дрель ударная BOSCH PSB 550 RЕ, БЗП Арт.0603130020",productPhoto:"./img/productImgs/drill.png",reviewText:'Идёт мужик по полю, видит подкова. Думает: "Возьму её себе домой, над дверью повешy - она мне удачу принесёт". Приносит он её домой, переворачивает - а там конь.',impression:3,conformity:1,reliability:3,date:"1 августа, 2018",postStatus:"posted",photos:[],modifiedStatus:!1,modifiedDate:" 19 августа, 2018",modifiedText:"Кузнец держит щипцами раскалённую подкову. — Боже, какая она горячая! — восхищается крестьянин. — Да ладно! — говорит кузнец. — Дадите десятку, так я её языком оближу. В предвкушении необычного зрелища крестьянин протянул кузнецу денежку. Кузнец облизал десятку и положил в карман.",modifiedPhotos:[],modifiedPostStatus:"posted"},{id:0,productName:"Дрель ударная BOSCH PSB 550 RЕ, БЗП Арт.0603130020",productPhoto:"./img/productImgs/drill.png",reviewText:"Врач сказал: «Джо, хорошая новость – это то, что я могу избавить тебя от твоих головных болей. Плохая новость – это то, что для этого потребуется кастрация. У тебя очень редкое состояние, из-за которого твои тестикулы давят на нижний отдел позвоночника, и это давление вызывает у тебя жуткую головную боль. Единственный способ снизить это давление – их удаление». Джо был в отчаянии. Ему даже жить расхотелось. Но выбора не было, и он согласился пойти под нож. Когда он вышел из больницы, впервые за 20 лет его не терзала головная боль, но его не покидало сожаление об утраченной части самого себя. Но потом он решил, что нужно начать новую жизнь. Он увидел магазин мужской одежды и подумал: «А не купить ли мне новый костюм?» Он вошёл в магазин и сказал продавцу: «Мне нужен костюм». Пожилой продавец смерил его быстрым взглядом и сказал: «Так… Рост 44». Джо рассмеялся: «Верно, откуда вы знаете?» - «60 лет в бизнесе». Джо примерил костюм,- он был впору. Пока Джо любовался собой в зеркале, продавец спросил: «Как насчёт новой рубашки?» Джо подумал и согласился. Продавец взглянул на Джо и сказал: «Так. 34 рукав и 16 с половиной шея». И вновь Джо удивился. «Верно, откуда вы знаете?» - «60 лет в бизнесе». Джо примерил рубашку, и она сидела великолепно. Когда Джо поправлял перед зеркалом воротничок, продавец спросил: «Может быть, вам нужны новые ботинки?» Джо понравилась эта мысль. Продавец взглянул на Джо и сказал: «Так… 9-1/2 E». Джо был потрясён. «Верно, откуда вы знаете?» - «60 лет в бизнесе». Джо примерил ботинки, и они ему подошли. Джо прошёлся по магазину, и продавец спросил: «А нижнее бельё?» Джо подумал и согласился. Продавец сделал шаг назад, смерил взглядом талию Джо и сказал: «Так… Размер 36». Джо расхохотался. «Ха-ха! Вот я вас и поймал! Я с восемнадцати лет ношу 34-й!» Продавец покачал головой: «Вы не можете носить 34-й. 34-й размер нижнего белья придавит ваши тестикулы к нижнему отдела позвоночника, и у вас будет жуткая головная боль».",impression:1,conformity:3,reliability:1,date:"1 августа, 2018",postStatus:"moderating",photos:["./img/messageImgs/workingDrill.png","./img/messageImgs/drill.png"],modifiedStatus:!1,modifiedDate:" 19 августа, 2018",modifiedText:"В части ожидается приезд генерала. Всё кругом чистят-красят. Одного солдата послали покрасить ракету. Он почти всю покрасил, но до самой макушки не достаёт. Думает: как же быть? Придумал! Берёт ведро краски, размахивается и забрасывает его на макушку ракеты. Ура! Ракета вся покрашена. Но ведро осталось висеть на носу ракеты. Генерал обходит часть: так, хорошо, трава зелёная, забор тоже покрашен. - А это что за хрень на ракете? - спрашивает у командира части. - Это миноотражатель, товарищ генерал! - не растерялся командир. - Сам вижу что миноотражатель! Почему не покрашен?!",modifiedPhotos:[],modifiedPostStatus:"posted"},{id:0,productName:"Декоративный металлический экран на радиатор 3-х секционный 3 ДМЭР",productPhoto:"./img/productImgs/dryer.png",reviewText:"Отслужив срочную службу в армии, солдат вернулся в родную деревушку. Все, естественно, обступили его и давай вопросами засыпать: что там, где там, как там. Солдат и рассказывает: - Армия - это дебилизм! - Это почему же? - удивились жители деревни. - Завтра узнаете. В четыре часа утра в деревне раздался колокольный звон. Все сельчане сбежались. Стоят в исподнем, сонные, ругаются. Выходит солдат и говорит: - Значит так: мы с батей - за дровами, остальные - разойтись!",impression:5,conformity:5,reliability:5,date:"1 августа, 2018",postStatus:"notposted",photos:["./img/messageImgs/workingDrill.png","./img/messageImgs/drill.png"],modifiedStatus:!1,modifiedDate:" 19 августа, 2018",modifiedText:"На занятиях по артиллерийской стрельбе: — Пушка стреляет, и снаряд летит по параболе… — Товарищ майор, а если пушку на бок положить, то и за угол стрелять можно будет?— Можно, но по Уставу не положено",modifiedPhotos:[],modifiedPostStatus:"posted"}],getReviews(){return this.reviews}};const s={state:{productName:"",productPhot:"",reviewText:"",date:"",postStatus:"",photos:"",impression:"",conformity:"",reliability:"",templateIndex:"",modifiedStatus:"",modifiedDate:"",modifiedText:"",modifiedPhotos:"",modifiedPostStatus:"",modifiedTemplateIndex:null},setState(t,s){let{productName:e,productPhoto:i,reviewText:o,date:a,postStatus:d,photos:r,impression:n,conformity:l,reliability:m,modifiedStatus:p,modifiedDate:c,modifiedText:h,modifiedPhotos:u,modifiedPostStatus:v}=t;this.state.productName=e,this.state.productPhoto=i,this.state.reviewText=o,this.state.date=a,this.state.postStatus=d,this.state.photos=r,this.state.templateIndex=s,this.state.impression=n,this.state.conformity=l,this.state.reliability=m,this.state.modifiedStatus=p,this.state.modifiedDate=c,this.state.modifiedText=h,this.state.modifiedPhotos=u,this.state.modifiedPostStatus=v,this.state.modifiedTemplateIndex=s+"m"},reviewBlockInit(t,s){return this.setState(t,s),this.state.modifiedStatus&&(modifiedTableWrapClass="table-item__wrap--modified",modifiedBlock="modifiedBlock"),`    <div class="table-item">\n                    <div class="table-item__wrap ${modifiedTableWrapClass}">\n                        <img class="product-photo" src="${this.state.productPhoto}"alt="фото товара">\n                        <span class="product-name">${this.state.productName}</span>\n                        <div class="review__wrap">\n                            ${this.scoreBlockInit(this.state.postStatus,this.state.impression,this.state.conformity,this.state.reliability)}\n                            <div class="review__body ${this.reviewBodyClassInit(this.state.postStatus)} ">\n                                <h3 class="review__title ${this.textTitleClassInit(this.state.postStatus)}">${this.textTitleValueInit(this.state.postStatus)}</h3>\n                                ${this.textBlockInit(this.state.reviewText,this.state.templateIndex)}\n                                <div class="review__imgs">\n                                    ${this.photosInit(this.state.photos)}\n                                </div>\n                            </div>\n                        </div>\n                        <div class="review-state">\n                            <span class="review-state__status ${this.statusClassInit(this.state.postStatus)}">${this.statusValueInit(this.state.postStatus)}</span>\n                            <span class="review-state__date">${this.state.date}</span>\n                        </div>\n                        ${this.actionBlockInit(this.state.postStatus)}\n                        ${this.modifiedBlockInit(this.state.modifiedStatus,this.state.postStatus)}\n                    </div>\n                </div>`},modifiedBlockInit(t,s){return!0===t&&"notposted"!==s?`    <div class="review__wrap--modified">\n                            <h3 class="review__title review__title--mobile-width${this.textTitleClassInit(this.state.modifiedPostStatus)}">${this.textTitleValueInit(this.state.modifiedPostStatus,t)}</h3>\n                            <div class="review__body review__body--modified ${this.reviewBodyClassInit(this.state.modifiedPostStatus)}">\n                                <h3 class="review__title review__title--modified ${this.textTitleClassInit(this.state.modifiedPostStatus)}">${this.textTitleValueInit(this.state.modifiedPostStatus,t)}</h3>\n                                ${this.textBlockInit(this.state.modifiedText,this.state.modifiedTemplateIndex,!0)}\n                                <div class="review__imgs">\n                                ${this.photosInit(this.state.modifiedPhotos)}\n                                </div>\n                            </div>\n                            <div class="review-state review-state--modified">\n                                <span class="review-state__status ${this.statusClassInit(this.state.modifiedPostStatus)}">${this.statusValueInit(this.state.modifiedPostStatus)}</span>\n                                <span class="review-state__date">${this.state.modifiedDate}</span>\n                            </div>\n                        </div>`:""},photosInit(t){let s="";return t.map(t=>{s+=`<a href="#" data-src="${t}" class="review__img-wrap">\n                            <img class="review__img" src="${t}" alt="img">\n                        </a>`}),s},statusClassInit(t){switch(t){case"moderating":return"review-state__status--moderating";case"posted":return"review-state__status--posted";case"notposted":return"review-state__status--notposted";default:return""}},statusValueInit(t){switch(t){case"moderating":return"на модерации";case"posted":return"опубликован";case"notposted":return"не опубликован";default:return""}},actionBlockInit:t=>"notposted"===t?"":'<div class="review-action">\n                        <span class="review-action__button">Дополнить отзыв</span>\n                    </div>',textTitleClassInit:t=>"notposted"===t?"review__title--notposted":"",textTitleValueInit:(t,s)=>"notposted"===t?"К сожалению, ваш отзыв не прошёл модерацию.":s?"Дополненный отзыв":"Отзыв",reviewBodyClassInit:t=>"notposted"===t?"review__body--notposted":"",scoreBlockInit(t,s,e,i){let o=+((s+e+i)/3).toFixed(1),a=+((s+e+i)/3).toFixed(1);(0^o)===o?o+=".0":o=+o.toFixed(1);return"notposted"!==t?`<div class="review__score">\n                        <div class="review__rating">\n                            ${(t=>{let s=Math.floor(t),e=Math.round(10*(t-s)),i="";for(let t=0;t<5;t++)if(s>t&&(i+='<img src="./img/common/rating_star100.svg" alt="star">'),s===t&&(0===e&&(i+='<img src="./img/common/rating_star0.svg" alt="star">'),0<e&&e<=3&&(i+='<img src="./img/common/rating_star025.svg" alt="star">'),4<=e&&e<=6&&(i+='<img src="./img/common/rating_star050.svg" alt="star">'),7<=e&&e<=9&&(i+='<img src="./img/common/rating_star075.svg" alt="star">')),s<t){for(let s=t+1;s<=5;s++)i+='<img src="./img/common/rating_star0.svg" alt="star">';break}return i})(a)}\n                            <span>${o}</span>\n                        </div>\n                        <span class="review__impression">Впечатление: ${s}</span>\n                            <span class="review__conformity">Соответствие: ${e}</span>\n                        <span class="review__reliability">Надежность: ${i}</span>\n                    </div>`:""},textBlockInit(t,s){let e=t.slice(0,195).trim();return t.length>195?`\n                    <div class="review__text" id="review__text--${s}"><p>${e}...</p><p>${t}</p></div>\n                    <div class="review__collapse-button" >\n                        <span id="collapse-button--${s}">подробнее</span>\n                        <img class="arrow" id="arrow--${s}" src="./img/common/arrow.svg" alt="arrow">\n                    </div>`:`<div class="review__text" id="review__text--${s}"><p>${t}</p></div>`}};$((function(){let e=[],i=null;$(".table-body").html(t.getReviews().map((t,i)=>(e.push(i),s.reviewBlockInit(t,i)))),e.map(t=>{$(`#collapse-button--${t}, #arrow--${t}`).click(s=>{$("#review__text--"+t).toggleClass("review__text--full"),$("#arrow--"+t).toggleClass("arrow--active")}),$(`#collapse-button--${t}m, #arrow--${t}m`).click(()=>{$(`#review__text--${t}m`).toggleClass("review__text--full"),$(`#arrow--${t}m`).toggleClass("arrow--active")})}),$(".review__img-wrap").click(t=>{$(".modal__photo").attr({src:""+t.currentTarget.dataset.src}),$(".modal").toggleClass("modal--show"),$("body").css({overflow:"hidden"}),i=$(window).scrollTop()}),$(".close-button").click(()=>{$(".modal").removeClass("modal--show"),$("body").css({overflow:"visible"}),$(window).scrollTop(i)})}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
